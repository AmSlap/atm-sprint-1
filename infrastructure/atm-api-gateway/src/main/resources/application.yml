spring:
  application:
    name: atm-api-gateway
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8180/realms/atm-monitoring-realm
          jwt-set-uri: http://localhost:8180/realms/atm-monitoring-realm/protocol/openid-connect/certs



  cloud:
    gateway:
      routes:
        - id: atm-registry-atms
          uri: lb://ATM-REGISTRY-SERVICE
          predicates:
            - Path=/api/registry/atms/**

        - id: atm-registry-agencies
          uri: lb://ATM-REGISTRY-SERVICE
          predicates:
            - Path=/api/registry/agencies/**

        - id: atm-state-service
          uri: lb://ATM-STATE-SERVICE
          predicates:
            - Path=/api/state/atms/**

        - id: atm-auth-service
          uri: lb://ATM-AUTH-SERVICE
          predicates:
            - Path=/api/auth/**

        - id: jbpm-incident-service
          uri: lb://JBPM-INCIDENT-SERVICE
          predicates:
            - Path=/api/incidents/**
      server:
        webflux:
          default-filters:
            - AddRequestHeader=X-Gateway-Source,atm-api-gateway  # Helpful for tracing

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    # Explicitly register the actual port where /actuator/prometheus is available
    non-secure-port: ${server.port}
    metadata-map:
      # These help with Prometheus discovery
      prometheus.path: /actuator/prometheus
      management.port: ${server.port}

# Expose Prometheus metrics endpoint
management:
  tracing:
    sampling:
      probability: 1.0
    baggage:
      remote-fields: "*"
      correlation:
        fields: "*"
  otlp:
    metrics:
      export:
        url: http://localhost:4318/v1/metrics
    tracing:
      endpoint: http://localhost:4318/v1/traces
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.loadbalancer: DEBUG

server:
  port: 8082