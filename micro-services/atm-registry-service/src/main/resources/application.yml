spring:
  application:
    name: atm-registry-service
    # Database Connection Properties
  datasource:
    url: jdbc:postgresql://localhost:5432/atm_registry_db
    username: postgres
    password: foo
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    # Schema Generation (Choose ONE strategy)
    hibernate:
      # Option 1: Automatic (Good for quick development/testing, NOT recommended for production)
      ddl-auto: update
      # Option 2: Using Migration Tools (Recommended for Dev/Prod) - Set to 'validate' or 'none'
      # ddl-auto: validate
    # Show SQL statements in logs (Optional, useful for debugging)
    show-sql: true
    properties:
      hibernate:
        format_sql: true

# Logging Levels (Optional)
logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

  pulsar:
    client:
      service-url: pulsar://localhost:6650
    producer:
      send-timeout-ms: 10000
    consumer:
      dead-letter-policy-max-redeliver-count: 3
    admin:
      service-url: http://localhost:8080

server:
  port: 8085

pulsar:
  consumer:
    status-topic: internal-atm-status-events
    configuration-topic: internal-atm-configuration-events
    counter-topic: internal-atm-counter-events
    transaction-topic: internal-atm-transaction-events

    subscription-name: atm-registry-service-subscription

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    # Explicitly register the actual port where /actuator/prometheus is available
    non-secure-port: ${server.port}
    metadata-map:
      # These help with Prometheus discovery
      prometheus.path: /actuator/prometheus
      management.port: ${server.port}

# Expose Prometheus metrics endpoint
management:
  tracing:
    sampling:
      probability: 1.0
    baggage:
      remote-fields: "*"
      correlation:
        fields: "*"
  otlp:
    metrics:
      export:
        url: http://localhost:4318/v1/metrics
    tracing:
      endpoint: http://localhost:4318/v1/traces
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}
