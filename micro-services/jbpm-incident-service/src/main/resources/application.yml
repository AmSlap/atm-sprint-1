spring:
  application:
    name: jbpm-incident-service
  datasource:
    url: jdbc:postgresql://localhost:5432/atm-incident-db
    username: postgres
    password: foo
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    # Schema Generation (Choose ONE strategy)
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  pulsar:
    client:
      service-url: pulsar://localhost:6650
    consumer:
      dead-letter-policy-max-redeliver-count: 3
    admin:
      service-url: http://localhost:8080
pulsar:
  consumer:
    incident-topic: internal-atm-incident-events

    subscription-name: atm-incident-service-subscription

kie:
    server:
        url: http://localhost:9091/kie-server/services/rest/server
        username: wbadmin
        password: wbadmin
        timeout: 30000
    container:
      id: IncidentManagement_1.0.0-SNAPSHOT
    process:
      id: IncidentManagement.IncidentManagementProcess
server:
  port: 8081

logging:
  level:
    # Set your base package to DEBUG/INFO as needed
    ma.atm.jbpmincidentservice: DEBUG

    # Enable DEBUG for Spring Pulsar core components
    #org.springframework.pulsar: DEBUG
    #org.apache.pulsar: DEBUG

    # Enable DEBUG for Jackson databind to see deserialization details/errors
    com.fasterxml.jackson.databind: DEBUG

    # Keep Hibernate logging if useful
    org.hibernate.SQL: INFO # Or DEBUG
    # org.hibernate.type.descriptor.sql.BasicBinder: TRACE

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    # Explicitly register the actual port where /actuator/prometheus is available
    non-secure-port: ${server.port}
    metadata-map:
      # These help with Prometheus discovery
      prometheus.path: /actuator/prometheus
      management.port: ${server.port}


# Expose Prometheus metrics endpoint
management:
  tracing:
    sampling:
      probability: 1.0
    baggage:
      remote-fields: "*"
      correlation:
        fields: "*"
  otlp:
    metrics:
      export:
        url: http://localhost:4318/v1/metrics
    tracing:
      endpoint: http://localhost:4318/v1/traces
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}
